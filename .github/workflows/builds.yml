name: Build and Release Python App

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build with PyInstaller
        run: pyinstaller --onefile --windowed --name snake main.py

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: snake-windows
          path: dist/snake.exe

  build-mac:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build with PyInstaller
        run: pyinstaller --onefile --windowed --name snake main.py

      - name: Create .app Bundle
        run: |
          mkdir -p Snake.app/Contents/MacOS
          cp dist/snake Snake.app/Contents/MacOS/snake

      - name: Create DMG Installer
        run: |
          brew install create-dmg
          mkdir -p dmg_source/Applications
          mv Snake.app dmg_source/
          # Create a background image with drag instruction
          echo "Drag Snake.app to Applications to install!" > dmg_source/DRAG_TO_INSTALL.txt
          create-dmg \
            --volname "Snake Installer" \
            --window-pos 200 120 \
            --window-size 600 400 \
            --icon-size 100 \
            --icon Snake.app 150 200 \
            --icon Applications 450 200 \
            --background "" \
            --custom-background-color 240 240 240 \
            --app-drop-link Applications \
            --text "Drag Snake.app to Applications to install!" 200 360 20 \
            Snake.dmg \
            dmg_source/

      - name: Upload Mac DMG Artifact
        uses: actions/upload-artifact@v4
        with:
          name: snake-mac
          path: Snake.dmg

  release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-mac]

    steps:
      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: snake-windows

      - name: Download Mac DMG Artifact
        uses: actions/download-artifact@v4
        with:
          name: snake-mac

      - name: Set Release Version (auto-increment)
        id: version
        run: |
          latest_tag=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+$' | head -n 1)
          if [ -z "$latest_tag" ]; then
            echo "VERSION=1.0" >> $GITHUB_ENV
          else
            major=$(echo $latest_tag | cut -d. -f1 | sed 's/v//')
            minor=$(echo $latest_tag | cut -d. -f2)
            next_minor=$((minor + 1))
            echo "VERSION=${major}.${next_minor}" >> $GITHUB_ENV
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: "Release v${{ env.VERSION }}"
          draft: false
          prerelease: false
          files: |
            snake.exe
            Snake.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
